//bootstrap code
//SP = 256
@256
D=A
@SP
M=D

//call Sys.init 0
@Sys.init$ret.0
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@5
D=D-A
@ARG
M=D
@Sys.init
0;JMP
(Sys.init$ret.0)

//function Class1.set 0
(Class1.set)

@ARG
D=M
@0
A=D+A
//push argument 0
D=M
@SP
AM=M+1
A=A-1
M=D

@Class1.0
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

@ARG
D=M
@1
A=D+A
//push argument 1
D=M
@SP
AM=M+1
A=A-1
M=D

@Class1.1
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

@0
//push constant 0
D=A
@SP
AM=M+1
A=A-1
M=D

//return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP

//function Class1.get 0
(Class1.get)

@Class1.0
//push static 0
D=M
@SP
AM=M+1
A=A-1
M=D

@Class1.1
//push static 1
D=M
@SP
AM=M+1
A=A-1
M=D

//sub
@15
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@14
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@15
D=M
@14
D=M-D
@SP
AM=M+1
A=A-1
M=D

//return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP

//function Class2.set 0
(Class2.set)

@ARG
D=M
@0
A=D+A
//push argument 0
D=M
@SP
AM=M+1
A=A-1
M=D

@Class2.0
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

@ARG
D=M
@1
A=D+A
//push argument 1
D=M
@SP
AM=M+1
A=A-1
M=D

@Class2.1
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

@0
//push constant 0
D=A
@SP
AM=M+1
A=A-1
M=D

//return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP

//function Class2.get 0
(Class2.get)

@Class2.0
//push static 0
D=M
@SP
AM=M+1
A=A-1
M=D

@Class2.1
//push static 1
D=M
@SP
AM=M+1
A=A-1
M=D

//sub
@15
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@14
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@15
D=M
@14
D=M-D
@SP
AM=M+1
A=A-1
M=D

//return
@LCL
D=M
@R14
M=D
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP

//function Sys.init 0
(Sys.init)

@6
//push constant 6
D=A
@SP
AM=M+1
A=A-1
M=D

@8
//push constant 8
D=A
@SP
AM=M+1
A=A-1
M=D

//call Class1.set 2
@Class1.set$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@7
D=D-A
@ARG
M=D
@Class1.set
0;JMP
(Class1.set$ret.1)

@R5
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

@23
//push constant 23
D=A
@SP
AM=M+1
A=A-1
M=D

@15
//push constant 15
D=A
@SP
AM=M+1
A=A-1
M=D

//call Class2.set 2
@Class2.set$ret.2
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@7
D=D-A
@ARG
M=D
@Class2.set
0;JMP
(Class2.set$ret.2)

@R5
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D

//call Class1.get 0
@Class1.get$ret.3
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@5
D=D-A
@ARG
M=D
@Class1.get
0;JMP
(Class1.get$ret.3)

//call Class2.get 0
@Class2.get$ret.4
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@5
D=D-A
@ARG
M=D
@Class2.get
0;JMP
(Class2.get$ret.4)

//label WHIL
(Sys.init$WHIL)

//goto WHIL
@Sys.init$WHIL
0;JMP

