function Board.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 1
pop static 0
push constant 2
pop static 1
push constant 3
pop static 2
push pointer 0
call Board.initGrid 1
pop temp 0
push pointer 0
call Board.initSquares 1
pop temp 0
push pointer 0
return
function Board.copy 5
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
call Board.getSize 1
pop this 0
push constant 1
pop static 0
push constant 2
pop static 1
push constant 3
pop static 2
push pointer 0
call Board.initGrid 1
pop temp 0
push pointer 0
call Board.initSquares 1
pop temp 0
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE_EXP0
push local 3
push this 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 4
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 3
push local 4
call Board.getSquare 3
pop local 0
push argument 0
push local 3
push local 4
call Board.getSquare 3
pop local 1
push local 1
call Square.getState 1
pop local 2
push local 0
push local 2
call Square.setState 2
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Board.disposeSquares 1
pop temp 0
push pointer 0
call Board.disposeGrid 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.displaySolution 1
push argument 0
pop pointer 0
push pointer 0
push pointer 0
push this 0
call Board.placeQueens 3
pop local 0
push local 0
call Board.print 1
pop temp 0
push constant 0
return
function Board.placeQueens 2
push argument 0
pop pointer 0
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
return
goto IF_END0
label IF_FALSE0
label WHILE_EXP0
push argument 1
push constant 0
eq
not
push argument 1
call Board.hasEmpty 1
and
not
if-goto WHILE_END0
push argument 1
call Board.findEmpty 1
pop local 1
push argument 1
call Board.copy 1
pop local 0
push local 0
push constant 0
push local 1
add
pop pointer 1
push that 0
push constant 1
push local 1
add
pop pointer 1
push that 0
call Board.placeQueen 3
pop temp 0
push local 0
push local 0
push argument 2
push constant 1
sub
call Board.placeQueens 3
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Board.dispose 1
pop temp 0
push argument 1
push constant 0
push local 1
add
pop pointer 1
push that 0
push constant 1
push local 1
add
pop pointer 1
push that 0
call Board.restrictSquare 3
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
return
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
label IF_END0
function Board.hasEmpty 4
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 2
push this 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 3
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 2
push local 3
call Board.getSquare 3
pop local 0
push local 0
call Square.getState 1
pop local 1
push local 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.findEmpty 5
push argument 0
pop pointer 0
push constant 2
call Array.new 1
pop local 0
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE_EXP0
push local 3
push this 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 4
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 3
push local 4
call Board.getSquare 3
pop local 1
push local 1
call Square.getState 1
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function Board.placeQueen 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Board.getSquare 3
pop local 0
push local 0
push static 1
call Square.setState 2
pop temp 0
push pointer 0
push argument 1
call Board.restrictRow 2
pop temp 0
push pointer 0
push argument 2
call Board.restrictCol 2
pop temp 0
push pointer 0
push argument 1
push argument 2
call Board.restrictDiagonals 3
pop temp 0
push constant 0
return
function Board.restrictDiagonals 2
push argument 0
pop pointer 0
push argument 1
pop local 0
push argument 2
pop local 1
label WHILE_EXP0
push local 0
push constant 1
neg
gt
push local 1
and
push constant 1
neg
gt
not
if-goto WHILE_END0
push pointer 0
push local 0
push local 1
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
sub
pop local 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push argument 1
pop local 0
push argument 2
pop local 1
label WHILE_EXP1
push local 0
push this 0
lt
push local 1
and
push constant 1
neg
gt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
add
pop local 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push argument 1
pop local 0
push argument 2
pop local 1
label WHILE_EXP2
push local 0
push constant 1
neg
gt
push local 1
and
push this 0
lt
not
if-goto WHILE_END2
push pointer 0
push local 0
push local 1
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
sub
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push argument 1
pop local 0
push argument 2
pop local 1
label WHILE_EXP3
push local 0
push this 0
lt
push local 1
and
push this 0
lt
not
if-goto WHILE_END3
push pointer 0
push local 0
push local 1
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push constant 0
return
function Board.restrictCol 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
push argument 1
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.restrictRow 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push pointer 0
push argument 1
push local 0
call Board.restrictSquare 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.restrictSquare 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Board.getSquare 3
pop local 0
push local 0
call Square.getState 1
pop local 1
push local 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 2
call Square.setState 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.initGrid 1
push argument 0
pop pointer 0
push this 0
call Array.new 1
pop this 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
push this 0
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.initSquares 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 0
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
label WHILE_EXP1
push local 2
push this 0
lt
not
if-goto WHILE_END1
push local 2
push local 0
add
call Square.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.disposeGrid 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
call Memory.deAlloc 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 1
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.disposeSquares 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 1
push local 2
call Board.getSquare 3
pop local 0
push local 0
call Memory.deAlloc 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.getSquare 1
push argument 0
pop pointer 0
push argument 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
function Board.getSize 0
push argument 0
pop pointer 0
push this 0
return
function Board.print 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 1
push local 2
call Board.getSquare 3
pop local 0
push local 0
call Square.print 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
